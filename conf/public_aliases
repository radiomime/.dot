#!/bin/bash

##########
# convienience aliases
###
alias mk='mkdir -pv'
alias v="nvim"
alias c="clear"
alias l="ls"
alias ll="ls -alth"
alias x='chmod +x'
pop() { sed -i '' -e '$ d' $1 ; }  # Remove the last line of a file ( pop ~/.ssn/known_hosts )

# alias nm='sudo nmap -sn $@'                                 # use nmap to scan the common /24 subnet without doing a port scan
nmshort() {
    sudo nmap -sn $@
}

nm() {
    sudo nmap -p- -A -T4 -v $@
}


##########
# git
###
alias gs="git status"
ga() {
    if [[ -z "$1" ]];then
        git add --all
    else
        git add "$@"
    fi
}

gc() {
    git commit -m "$@"
}

##########
# tmux
###
tn() { tmux new -s $1 ; }
ta() { tmux a -t $1 ; }
ts() { tmux ls ; }

##########
# docker
###
alias up="docker-compose up"
alias build="docker-compose build"
alias upbuild="docker-compose up --build"

##########
# formatting
###
alias b="bat"
alias prettyjson='python -m json.tool'

csvprint () {
    cat $1 | column -s, -t | bat
}

##########
# developer tools
###

# print gitignore for provided project type [e.g. gi python]
gi () {
    curl -sL https://www.toptal.com/developers/gitignore/api/$@ ;
    printf "\n"
}

uu() {
    # Update on linux
    if [[ "$OSTYPE" == "linux-gnu"* ]]; then
        printf "Updating packages for linux\n" \
            && sudo apt-get update -y \
            && sudo apt-get upgrade -y
    fi

    if [[ "$OSTYPE" == "darwin"* ]]; then
        printf "Updating packages for OS X\n" \
            && brew update \
            && brew upgrade
    fi
}

##########
# hardware setup
###
wacom() {
    # Only run on linux
    if [[ "$OSTYPE" != "linux-gnu"* ]]; then
        exit
    fi

    # Only run if wacom command is there
    if ! command -v xsetwacom &> /dev/null
    then
        echo "COMMAND could not be found"
    fi

    xsetwacom --list devices

    # Configure pen settings
    xsetwacom --set "Wacom Intuos BT S Pen stylus" button 1 "button +1"  # touching pad
    xsetwacom --set "Wacom Intuos BT S Pen stylus" button 2 "button +2"  # button 1 stylus
    xsetwacom --set "Wacom Intuos BT S Pen stylus" button 3 "key ctrl z" # button 2 stylus

    # Print settings
    printf "\n*** Pen Button mappings"
    xsetwacom --get "Wacom Intuos BT S Pen stylus" button 1
    xsetwacom --get "Wacom Intuos BT S Pen stylus" button 2
    xsetwacom --get "Wacom Intuos BT S Pen stylus" button 3

    # Configure pad settings
    xsetwacom --set "Wacom Intuos BT S Pad pad" button 1 "key ctrl +"
    xsetwacom --set "Wacom Intuos BT S Pad pad" button 2 "key ctrl -"
    xsetwacom --set "Wacom Intuos BT S Pad pad" button 3 "key p"
    xsetwacom --set "Wacom Intuos BT S Pad pad" button 4 "key l"

    # Print settings
    printf "\n*** Pad Button mappings"
    xsetwacom --get "Wacom Intuos BT S Pad pad" button 1
    xsetwacom --get "Wacom Intuos BT S Pad pad" button 2
    xsetwacom --get "Wacom Intuos BT S Pad pad" button 3
    xsetwacom --get "Wacom Intuos BT S Pad pad" button 4
}

##########
# sandbox
###
